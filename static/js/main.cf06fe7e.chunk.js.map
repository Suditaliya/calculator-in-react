{"version":3,"sources":["mathUtil.js","App.js","index.js"],"names":["performAction","secondValue","operator","firstValue","operand1","parseInt","operand2","calculateResult","actionStack","length","numberStack","slice","pop","result","push","Button","react_default","a","createElement","id","this","props","value","class","onClick","clickListener","Component","Display","view","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateDisplay","bind","assertThisInitialized","clearDisplay","getResult","state","buttons","createButtons","i","App_Button","clicked","lastIndex","lastValue","isNaN","event","target","oldView","setState","updateNumberStack","App_Display","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.cf06fe7e.chunk.js","sourcesContent":["const performAction = function(secondValue, operator, firstValue) {\n  const operand1 = parseInt(firstValue);\n  const operand2 = parseInt(secondValue);\n\n  switch (operator) {\n    case '+':\n      return operand1 + operand2;\n\n    case '-':\n      return operand1 - operand2;\n\n    case '*':\n      return operand1 * operand2;\n\n    case '/':\n      return operand1 / operand2;\n\n    case '%':\n      return (operand1 * operand2) / 100;\n\n    default:\n      return operand1;\n  }\n};\n\nconst calculateResult = function(actionStack) {\n  if (actionStack.length < 3) {\n    return;\n  }\n\n  const numberStack = actionStack.slice();\n\n  if (numberStack.length === 3) {\n    return performAction(\n      numberStack.pop(),\n      numberStack.pop(),\n      numberStack.pop()\n    );\n  }\n\n  const result = performAction(\n    numberStack.pop(),\n    numberStack.pop(),\n    numberStack.pop()\n  );\n  numberStack.push(result);\n\n  return calculateResult(numberStack);\n};\n\nexport default calculateResult;\n//module.exports = calculateResult;\n","import React, { Component } from 'react';\nimport calculateResult from './mathUtil';\n\nclass Button extends Component {\n  render() {\n    return (\n      <div id={this.props.value} class=\"btn\" onClick={this.props.clickListener}>\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass Display extends Component {\n  render() {\n    return <div class=\"display\">{this.props.view}</div>;\n  }\n}\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numberStack = [];\n\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n    this.getResult = this.getResult.bind(this);\n\n    this.state = {\n      view: '0',\n      buttons: this.createButtons()\n    };\n  }\n\n  createButtons() {\n    const buttons = [];\n    for (let i = 1; i <= 9; i++) {\n      buttons.push(<Button value={i} clickListener={this.updateDisplay} />);\n    }\n\n    buttons.push(<Button value=\".\" clickListener={this.updateDisplay} />);\n    buttons.push(<Button value=\"0\" clickListener={this.updateDisplay} />);\n\n    buttons.push(<Button value=\"=\" clickListener={this.getResult} />);\n    buttons.push(<Button value=\"+\" clickListener={this.updateDisplay} />);\n    buttons.push(<Button value=\"-\" clickListener={this.updateDisplay} />);\n    buttons.push(<Button value=\"*\" clickListener={this.updateDisplay} />);\n\n    buttons.push(<Button value=\"C\" clickListener={this.clearDisplay} />);\n\n    buttons.push(<Button value=\"/\" clickListener={this.updateDisplay} />);\n    buttons.push(<Button value=\"%\" clickListener={this.updateDisplay} />);\n\n    return buttons;\n  }\n\n  updateNumberStack(clicked) {\n    const lastIndex = this.numberStack.length - 1;\n    let lastValue = this.numberStack[lastIndex];\n\n    if (isNaN(clicked) || isNaN(lastValue)) {\n      this.numberStack.push(clicked);\n      return;\n    }\n\n    this.numberStack[lastIndex] = lastValue + clicked;\n  }\n\n  updateDisplay(event) {\n    let clicked = event.target.id;\n    let oldView = this.state.view;\n\n    if (this.state.view === '0') {\n      oldView = '';\n    }\n\n    this.setState({\n      view: oldView + clicked\n    });\n    this.updateNumberStack(clicked);\n  }\n\n  getResult() {\n    const result = calculateResult(this.numberStack);\n    if (isNaN(result)) return;\n    this.setState({\n      view: result\n    });\n    this.numberStack = [result];\n  }\n\n  clearDisplay() {\n    this.setState({\n      view: '0'\n    });\n    this.numberStack = [];\n  }\n\n  render() {\n    return (\n      <div class=\"calculator\">\n        <Display view={this.state.view} />\n        <div class=\"btns\">{this.state.buttons}</div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './App';\nimport './App.css';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}